#!/bin/bash
# vim: set tabstop=2 shiftwidth=2 autoindent smartindent:

#------------------------------------------------------------------------------
# Copyright 2009 Lance W. Feagan
#
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at 
#
#	http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions and 
# limitations under the License. 
#------------------------------------------------------------------------------

###############################################################################
# Module: oldname
# Description:
# 	Defines ...
# 	nextline
###############################################################################

#
# Template for new module creation.
# Substitute the new module name for 'oldname'
# %s/oldname/newname/gc

oldname_dependencies=( 'mbe' )
oldname_functions=( 'oldname_load' 'oldname_unload' 'oldname_setpath' 'oldname_info' 'oldname_complete' )

oldname_load ()
{
	DEBUG echo "oldname_load: enter"
	local module="oldname"

	# Load preferences
	
	# Configure module

	DEBUG echo "oldname_load: leave"
}

oldname_unload ()
{
	local func
	for func in "${oldname_functions[@]}"; do
		unset "${func}"
	done
	return 0
}

oldname_setpath ()
{

}

oldname_info ()
{

}

_oldname_complete()
{
	COMPREPLY=( )

	if [ $COMP_CWORD -eq 2 ]; then
		funcs="cd config env list"
		COMPREPLY=( $(compgen -W "${funcs}" -- ${cur}) )
		return 0
	fi

	case "${module_function}" in
		cd|cdworkspace|env)
			COMPREPLY=( )
			return 0
			;;
		list)
			COMPREPLY=( versions )
			return 0
			;;
		config|run)
			# when previous is the function, list the possible flags
			# when previous is a flag, generate possible flag arguments
			case "${prev}" in
				-b)
					local bits="32 64"
					COMPREPLY=( $(compgen -W "${bits}" -- ${cur})  )
					return 0
					;;
				-v)
					local versions="$(_oldname_listVersions)"
					COMPREPLY=( $(compgen -W "${versions}" -- ${cur})  )
					return 0
					;;
				config|run|*)
					# flags are: "-b -v "
					_mbe_functionFlags=( '-b' '-v' )
					local flags="$(_mbe_getRemainingConfigFlags)"
					COMPREPLY=( $(compgen -W "${flags}" -- ${cur})  )
					return 0
					;;
			esac
			;;
		esac

	COMPREPLY=( )
	return 0
}
